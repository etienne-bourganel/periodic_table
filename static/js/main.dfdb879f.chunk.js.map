{"version":3,"sources":["components/PeriodGroupCell/index.js","components/ElementCell/index.js","components/Cell/index.js","components/InfoBoxItem/index.js","components/InfoBox/index.js","modules/createPeriodicTable.js","components/Table/index.js","components/AppHeader/index.js","App.js","index.js"],"names":["PeriodGroupCell","elementInfo","sendInfoToInfoBox","resetInfoToInfoBox","sendPeriodOrGroupCoordinates","resetPeriodOrGroupCoordinates","className","onMouseOver","onMouseOut","onClick","window","open","source","xpos","ypos","ElementCell","PeriodOrGroupToHighlight","categoryClass","category","substring","trim","onMouseLeave","onMouseEnter","number","symbol","name","atomic_mass","toFixed","Cell","updateInfoBox","sendPeriodOrGroupCoordinatesToTable","coordinates","InfoBoxItem","infoItemTitle","infoItem","itemTitleClass","InfoBox","infoBoxData","titlefy","str","charAt","toUpperCase","slice","replace","map","periodicTable","require","periods_groups","createPeriodicTable","emptyTable","push","cell","elements","find","element","data","periodOrGroup","Table","tableTemplate","infoObject","console","log","InfoBoxData","setInfoBoxData","useState","setPeriodOrGroupToHighlight","periodOrGroupCoordinates","cellInfo","AppHeader","href","target","rel","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gnxIAoCeA,EAjCS,SAAC,GAMlB,IALLC,EAKI,EALJA,YACAC,EAII,EAJJA,kBACAC,EAGI,EAHJA,mBACAC,EAEI,EAFJA,6BACAC,EACI,EADJA,8BAgBA,OACE,qBACEC,UAAU,uBACVC,YAjBoB,WACtBH,IACAF,KAgBEM,WAbmB,WACrBH,IACAF,KAYEM,QATgB,WAClBC,OAAOC,KAAKV,EAAYW,OAAQ,WAIhC,SAMGX,EAAYY,MAAQZ,EAAYa,QCkBxBC,G,MA9CK,SAAC,GAKd,IAJLd,EAII,EAJJA,YACAC,EAGI,EAHJA,kBACAC,EAEI,EAFJA,mBACAa,EACI,EADJA,yBAcMC,EAAgBhB,EAAYiB,SAASC,UAAU,EAAG,GAAGC,OAW3D,OACE,sBACEd,UAAS,wBAAmBW,EAAnB,YATTD,EAAyBH,OAASZ,EAAYY,MAC9CG,EAAyBF,OAASb,EAAYa,MACX,IAAlCE,EAAyBF,KAAoC,IAArBb,EAAYa,MAClB,IAAlCE,EAAyBF,KAAoC,KAArBb,EAAYa,KAOrC,YAAc,IAE9BO,aAxBmB,WACrBlB,KAwBEmB,aA7BoB,WACtBpB,EAAkBD,IA6BhBQ,QAtBgB,WAClBC,OAAOC,KAAKV,EAAYW,OAAQ,WAehC,UAQE,qBAAKN,UAAU,aAAf,SAA6BL,EAAYsB,SACzC,qBAAKjB,UAAU,aAAf,SAA6BL,EAAYuB,SACzC,qBAAKlB,UAAU,WAAf,SAA2BL,EAAYwB,OACvC,qBAAKnB,UAAU,WAAf,SAA2BL,EAAYyB,YAAYC,QAAQ,UC6BlDC,EApEF,SAAC,GAKP,IACgB,EALrB3B,EAII,EAJJA,YACA4B,EAGI,EAHJA,cACAC,EAEI,EAFJA,oCACAd,EACI,EADJA,yBAEMe,EAAoC,CAAElB,MAAvB,EAAsCZ,GAAnCY,KAA0BC,KAA7B,EAASA,MAExBZ,EAAoB,WACxB2B,EAAc5B,IAGVE,EAAqB,WACzB0B,EAAc,KAGVzB,EAA+B,WACnC0B,EAAoCC,IAGhC1B,EAAgC,WACpCyB,EAAoC,CAAEjB,KAAM,EAAGC,KAAM,KAevD,OAAIb,EAAYuB,OAEZ,cAAC,EAAD,CACEvB,YAAaA,EACbC,kBAAmBA,EACnBC,mBAAoBA,EACpBa,yBAA0BA,IAhBP,IAArBf,EAAYa,MAAcb,EAAYY,KAAO,GAAKZ,EAAYY,KAAO,IAMhD,IAArBZ,EAAYY,MAAcZ,EAAYa,KAAO,GAAKb,EAAYa,KAAO,EAerE,cAAC,EAAD,CACEb,YAAaA,EACbC,kBAAmBA,EACnBC,mBAAoBA,EACpBC,6BAA8BA,EAC9BC,8BAA+BA,IAavB,qBAAKC,UAAU,oBCtDhB0B,G,YAbK,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,SAC9BC,EAAiBF,EAAcd,UAAU,EAAG,GAElD,OACE,sBAAKb,UAAS,sBAAiB6B,EAAjB,KAAd,UACE,sBAAM7B,UAAU,YAAhB,SACqB,WAAlB2B,EAA6B,GAAKA,IAErC,sBAAM3B,UAAU,WAAhB,SAA4B4B,SC+CnBE,EAtDC,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAcXC,EAAU,SAACC,GACf,OAAQA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,MAAM,GAAK,MAAMC,QAAQ,IAAK,MAW1E,OAPSN,EAAYb,OASjB,qBAAKlB,UAAU,UAAf,SA3BsB,CACxB,OACA,SACA,WACA,gBACA,QACA,cACA,UACA,WAoBuBsC,KAAI,SAACV,GAAD,OACrB,cAAC,EAAD,CAEED,cAAeK,EAAQJ,GACvBA,SAAUG,EAAYH,IAFjBA,QARNG,EAAYZ,KAiBjB,qBAAKnB,UAAU,wBAAf,SA5B4B,CAAC,OAAQ,WA6BVsC,KAAI,SAACV,GAAD,OAC3B,cAAC,EAAD,CAEED,cAAeK,EAAQJ,GACvBA,SAAUG,EAAYH,IAFjBA,QAQR,M,eCvDHW,EAAgBC,EAAQ,IACxBC,EAAiBD,EAAQ,IA6BhBE,EA3Ba,WAG1B,IAFA,IAAIC,EAAa,GAERnC,EAAO,EAAGA,GAAQ,GAAIA,IAC7B,IAAK,IAAID,EAAO,EAAGA,GAAQ,GAAIA,IAC7BoC,EAAWC,KAAK,CAAErC,OAAMC,SAmB5B,OAfsBmC,EAAWL,KAC/B,SAACO,GAAD,OACEN,EAAcO,SAASC,MACrB,SAACC,GAAD,OAAaA,EAAQzC,OAASsC,EAAKtC,MAAQyC,EAAQxC,OAASqC,EAAKrC,SADnE,2BAEUqC,GAFV,IAEgBI,KAAM,UAGaX,KACrC,SAACO,GAAD,OACEJ,EAAeA,eAAeM,MAC5B,SAACG,GAAD,OACEA,EAAc3C,OAASsC,EAAKtC,MAAQ2C,EAAc1C,OAASqC,EAAKrC,SAFpE,2BAGUqC,GAHV,IAGgBI,KAAM,WCqBbE,EAvCD,WACZ,IAAMC,EAAgBV,IAEhBnB,EAAgB,SAAC8B,GACrBC,QAAQC,IAAIC,GACZC,EAAeJ,GACfC,QAAQC,IAAIC,IAGd,EAAsCE,mBAAS,IAA/C,mBAAOF,EAAP,KAAoBC,EAApB,KAEA,EAAgEC,mBAAS,IAAzE,mBAAOhD,EAAP,KAAiCiD,EAAjC,KAEMnC,EAAsC,SAACoC,GAC3CD,EAA4BC,IAG9B,OACE,sBAAK5D,UAAU,2BAAf,UACE,qBAAKA,UAAU,QAAf,SACGoD,EAAcd,KAAI,SAACuB,GAAD,OACjB,cAAC,EAAD,CAEElE,YAAakE,EACbtC,cAAeA,EACfC,oCACEA,EAEFd,yBAA0BA,GAP5B,WACWmD,EAAStD,KADpB,YAC4BsD,EAASrD,YAUzC,8BACE,cAAC,EAAD,CAASuB,YAAayB,UCVfM,G,MA1BG,WAChB,OACE,yBAAQ9D,UAAU,aAAlB,UACE,mBACEA,UAAU,QACV+D,KAAK,+CACLC,OAAO,SACPC,IAAI,sBAJN,wCAQA,sBAAKjE,UAAU,UAAf,oBACU,IACR,mBACEA,UAAU,cACV+D,KAAK,uCACLC,OAAO,SACPC,IAAI,sBAJN,uCCFOC,MATf,WACE,OACE,sBAAKlE,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCJNmE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dfdb879f.chunk.js","sourcesContent":["import React from \"react\"\nimport \"./index.css\"\n\nconst PeriodGroupCell = ({\n  elementInfo,\n  sendInfoToInfoBox,\n  resetInfoToInfoBox,\n  sendPeriodOrGroupCoordinates,\n  resetPeriodOrGroupCoordinates,\n}) => {\n  const handleMouseOver = () => {\n    sendPeriodOrGroupCoordinates()\n    sendInfoToInfoBox()\n  }\n\n  const handleMouseout = () => {\n    resetPeriodOrGroupCoordinates()\n    resetInfoToInfoBox()\n  }\n\n  const handleClick = () => {\n    window.open(elementInfo.source, \"_blank\")\n  }\n\n  return (\n    <div\n      className='Cell PeriodGroupCell'\n      onMouseOver={handleMouseOver}\n      onMouseOut={handleMouseout}\n      onClick={handleClick}\n    >\n      {elementInfo.xpos || elementInfo.ypos}\n    </div>\n  )\n}\n\nexport default PeriodGroupCell\n","import React from \"react\"\nimport \"./index.css\"\n\nconst ElementCell = ({\n  elementInfo,\n  sendInfoToInfoBox,\n  resetInfoToInfoBox,\n  PeriodOrGroupToHighlight,\n}) => {\n  const handleMouseOver = () => {\n    sendInfoToInfoBox(elementInfo)\n  }\n\n  const handleMouseOut = () => {\n    resetInfoToInfoBox()\n  }\n\n  const handleClick = () => {\n    window.open(elementInfo.source, \"_blank\")\n  }\n\n  const categoryClass = elementInfo.category.substring(0, 7).trim()\n\n  let highlight = () => {\n    return (\n      PeriodOrGroupToHighlight.xpos === elementInfo.xpos ||\n      PeriodOrGroupToHighlight.ypos === elementInfo.ypos ||\n      (PeriodOrGroupToHighlight.ypos === 6) & (elementInfo.ypos === 9) ||\n      (PeriodOrGroupToHighlight.ypos === 7) & (elementInfo.ypos === 10)\n    )\n  }\n\n  return (\n    <div\n      className={`Cell elmtCell ${categoryClass} ${\n        highlight() ? \"highlight\" : \"\"\n      }`}\n      onMouseLeave={handleMouseOut}\n      onMouseEnter={handleMouseOver}\n      onClick={handleClick}\n    >\n      <div className='elmtNumber'>{elementInfo.number}</div>\n      <div className='elmtSymbol'>{elementInfo.symbol}</div>\n      <div className='elmtName'>{elementInfo.name}</div>\n      <div className='elmtInfo'>{elementInfo.atomic_mass.toFixed(2)}</div>\n    </div>\n  )\n}\n\nexport default ElementCell\n","import React from \"react\"\nimport \"./index.css\"\nimport PeriodGroupCell from \"../PeriodGroupCell\"\nimport ElementCell from \"../ElementCell\"\n\nconst Cell = ({\n  elementInfo,\n  updateInfoBox,\n  sendPeriodOrGroupCoordinatesToTable,\n  PeriodOrGroupToHighlight,\n}) => {\n  const coordinates = (({ xpos, ypos }) => ({ xpos, ypos }))(elementInfo)\n\n  const sendInfoToInfoBox = () => {\n    updateInfoBox(elementInfo)\n  }\n\n  const resetInfoToInfoBox = () => {\n    updateInfoBox({})\n  }\n\n  const sendPeriodOrGroupCoordinates = () => {\n    sendPeriodOrGroupCoordinatesToTable(coordinates)\n  }\n\n  const resetPeriodOrGroupCoordinates = () => {\n    sendPeriodOrGroupCoordinatesToTable({ xpos: 0, ypos: 0 })\n  }\n\n  const CellIsGroupNr = () => {\n    return (\n      elementInfo.ypos === 0 && elementInfo.xpos > 0 && elementInfo.xpos < 19\n    )\n  }\n\n  const CellIsPeriodNr = () => {\n    return (\n      elementInfo.xpos === 0 && elementInfo.ypos > 0 && elementInfo.ypos < 9\n    )\n  }\n\n  if (elementInfo.symbol) {\n    return (\n      <ElementCell\n        elementInfo={elementInfo}\n        sendInfoToInfoBox={sendInfoToInfoBox}\n        resetInfoToInfoBox={resetInfoToInfoBox}\n        PeriodOrGroupToHighlight={PeriodOrGroupToHighlight}\n      />\n    )\n  } else if (CellIsGroupNr()) {\n    return (\n      <PeriodGroupCell\n        elementInfo={elementInfo}\n        sendInfoToInfoBox={sendInfoToInfoBox}\n        resetInfoToInfoBox={resetInfoToInfoBox}\n        sendPeriodOrGroupCoordinates={sendPeriodOrGroupCoordinates}\n        resetPeriodOrGroupCoordinates={resetPeriodOrGroupCoordinates}\n      />\n    )\n  } else if (CellIsPeriodNr()) {\n    return (\n      <PeriodGroupCell\n        elementInfo={elementInfo}\n        sendInfoToInfoBox={sendInfoToInfoBox}\n        resetInfoToInfoBox={resetInfoToInfoBox}\n        sendPeriodOrGroupCoordinates={sendPeriodOrGroupCoordinates}\n        resetPeriodOrGroupCoordinates={resetPeriodOrGroupCoordinates}\n      />\n    )\n  } else return <div className='Cell emptyCell'></div>\n}\n\nexport default Cell\n","import React from \"react\"\nimport \"./index.css\"\n\nconst InfoBoxItem = ({ infoItemTitle, infoItem }) => {\n  const itemTitleClass = infoItemTitle.substring(0, 4)\n\n  return (\n    <div className={`InfoBoxItem ${itemTitleClass} `}>\n      <span className='InfoTitle'>\n        {infoItemTitle === \"Name: \" ? \"\" : infoItemTitle}\n      </span>\n      <span className='InfoItem'>{infoItem}</span>\n    </div>\n  )\n}\n\nexport default InfoBoxItem\n","import React from \"react\"\nimport \"./index.css\"\nimport InfoBoxItem from \"../InfoBoxItem\"\n\nconst InfoBox = ({ infoBoxData }) => {\n  const elementInfoToShow = [\n    \"name\",\n    \"symbol\",\n    \"category\",\n    \"discovered_by\",\n    \"phase\",\n    \"atomic_mass\",\n    \"density\",\n    \"summary\",\n  ]\n\n  const periodOrGroupInfoToShow = [\"name\", \"summary\"]\n\n  const titlefy = (str) => {\n    return (str.charAt(0).toUpperCase() + str.slice(1) + \": \").replace(\"_\", \" \")\n  }\n\n  const isAnElement = () => {\n    return infoBoxData.symbol\n  }\n\n  const isAPeriodOrGroup = () => {\n    return infoBoxData.name\n  }\n\n  if (isAnElement()) {\n    return (\n      <div className='InfoBox'>\n        {elementInfoToShow.map((infoItem) => (\n          <InfoBoxItem\n            key={infoItem}\n            infoItemTitle={titlefy(infoItem)}\n            infoItem={infoBoxData[infoItem]}\n          />\n        ))}\n      </div>\n    )\n  } else if (isAPeriodOrGroup()) {\n    return (\n      <div className='InfoBox PeriodOrGroup'>\n        {periodOrGroupInfoToShow.map((infoItem) => (\n          <InfoBoxItem\n            key={infoItem}\n            infoItemTitle={titlefy(infoItem)}\n            infoItem={infoBoxData[infoItem]}\n          />\n        ))}\n      </div>\n    )\n  }\n  return null\n}\n\nexport default InfoBox\n","const periodicTable = require(\"../data/data.json\")\nconst periods_groups = require(\"../data/periods_groups.json\")\n\nconst createPeriodicTable = () => {\n  let emptyTable = []\n\n  for (let ypos = 0; ypos <= 10; ypos++) {\n    for (let xpos = 0; xpos <= 19; xpos++) {\n      emptyTable.push({ xpos, ypos })\n    }\n  }\n\n  const tableTemplate = emptyTable.map(\n    (cell) =>\n      periodicTable.elements.find(\n        (element) => element.xpos === cell.xpos && element.ypos === cell.ypos\n      ) || { ...cell, data: null }\n  )\n\n  const newTableTemplate = tableTemplate.map(\n    (cell) =>\n      periods_groups.periods_groups.find(\n        (periodOrGroup) =>\n          periodOrGroup.xpos === cell.xpos && periodOrGroup.ypos === cell.ypos\n      ) || { ...cell, data: null }\n  )\n\n  return newTableTemplate\n}\n\nexport default createPeriodicTable\n","import React, { useState } from \"react\"\nimport Cell from \"../Cell\"\nimport InfoBox from \"../InfoBox\"\nimport \"./index.css\"\nimport createPeriodicTable from \"../../modules/createPeriodicTable\"\n\nconst Table = () => {\n  const tableTemplate = createPeriodicTable()\n\n  const updateInfoBox = (infoObject) => {\n    console.log(InfoBoxData)\n    setInfoBoxData(infoObject)\n    console.log(InfoBoxData)\n  }\n\n  const [InfoBoxData, setInfoBoxData] = useState({})\n\n  const [PeriodOrGroupToHighlight, setPeriodOrGroupToHighlight] = useState({})\n\n  const sendPeriodOrGroupCoordinatesToTable = (periodOrGroupCoordinates) => {\n    setPeriodOrGroupToHighlight(periodOrGroupCoordinates)\n  }\n\n  return (\n    <div className='TableAndInfoBoxContainer'>\n      <div className='Table'>\n        {tableTemplate.map((cellInfo) => (\n          <Cell\n            key={`x${cellInfo.xpos}y${cellInfo.ypos}`}\n            elementInfo={cellInfo}\n            updateInfoBox={updateInfoBox}\n            sendPeriodOrGroupCoordinatesToTable={\n              sendPeriodOrGroupCoordinatesToTable\n            }\n            PeriodOrGroupToHighlight={PeriodOrGroupToHighlight}\n          />\n        ))}\n      </div>\n      <div>\n        <InfoBox infoBoxData={InfoBoxData} />\n      </div>\n    </div>\n  )\n}\n\nexport default Table\n","import React from \"react\"\nimport \"./index.css\"\n\nconst AppHeader = () => {\n  return (\n    <header className='App-header'>\n      <a\n        className='Title'\n        href='https://en.wikipedia.org/wiki/Periodic_table'\n        target='_blank'\n        rel='noopener noreferrer'\n      >\n        Periodic Table of Elements\n      </a>\n      <div className='credits'>\n        Made by{\" \"}\n        <a\n          className='creditsName'\n          href='https://github.com/etienne-bourganel'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          Etienne Bourganel\n        </a>\n      </div>\n    </header>\n  )\n}\n\nexport default AppHeader\n","import \"./App.css\"\nimport React from \"react\"\nimport Table from \"./components/Table\"\nimport AppHeader from \"./components/AppHeader\"\n\nfunction App() {\n  return (\n    <div className='App'>\n      <AppHeader />\n      <Table />\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}